@startuml Vue Déploiement

' Définir les styles
skinparam node {
    BackgroundColor LightBlue
    BorderColor DarkBlue
    FontColor Black
}

skinparam database {
    BackgroundColor LightGreen
    BorderColor DarkGreen
    FontColor Black
}

skinparam artifact {
    BackgroundColor Ivory
    BorderColor Gray
    FontColor Black
}

' Définir les nœuds
node "Docker Environment" as DockerEnv {
    node "Caisse Container" as CaisseContainer {
        node "Application Python" as AppPython {
            artifact "Interface Console\n(main.py)" as Main
            artifact "Services\n(service.py)" as Services
            artifact "DAOs\n(dao.py)" as DAOs
            artifact "Modèles\n(models.py)" as Models
            artifact "Configuration DB\n(db.py)" as ConfigDB
            
            ' Relations internes
            Main -down-> Services
            Services -down-> DAOs
            DAOs -down-> Models
            DAOs .right.> ConfigDB
            Models .right.> ConfigDB
        }
    }
    
    node "Database Container" as DBContainer {
        database "PostgreSQL" as PostgreSQL {
            artifact "store_db" as StoreDB
        }
    }
    
    ' Volume persistant
    database "Docker Volume" as DockerVolume {
        artifact "postgres_data" as PostgresData
    }
    
    ' Connexions
    CaisseContainer -- DBContainer : "PostgreSQL Protocol\nvia SQLAlchemy"
    DBContainer -- DockerVolume : "Persistent Storage"
}

' Notes explicatives
note right of DockerEnv
  Architecture containerisée
  avec persistance des données
end note

note bottom of PostgreSQL
  Base de données PostgreSQL
  Transactions ACID
  Port: 5432
end note

note top of CaisseContainer
  Application Python
  dans container Docker
end note

note right of DockerVolume
  Volume Docker pour
  persistance des données
end note

' Titre et légende
title Architecture de déploiement - Système de Caisse (Containerisé)

legend right
  <b>Vue Déploiement</b>
  
  Ce diagramme illustre l'architecture de déploiement
  du système de caisse utilisant Docker avec une base
  de données PostgreSQL persistante.
  
  <b>Points forts:</b>
  - Containerisation complète
  - Persistance des données
  - Scalabilité améliorée
  - Base de données robuste
  
  <b>Caractéristiques:</b>
  - PostgreSQL v13
  - Volumes Docker
  - Healthchecks
  - Configuration via variables d'environnement
endlegend

@enduml 