name: CI / CD

on:
  push:
    branches: [main]
  pull_request:

env:
  APP_NAME: log430-labo-02
  REGISTRY: docker.io
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install linters
        run: pip install black==24.4.2
      - name: Run black (checkâ€‘only)
        run: black --check src tests

  tests:
    runs-on: ubuntu-latest
    needs: lint
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: store_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Set environment variables
        run: |
          echo "DATABASE_URL=postgresql://user:password@localhost:5432/store_db" >> $GITHUB_ENV
          echo "FLASK_ENV=testing" >> $GITHUB_ENV
          echo "SECRET_KEY=test-secret-key" >> $GITHUB_ENV
      - name: Initialize test database
        run: |
          PYTHONPATH=./src python -m src.create_db
      - name: Run application tests
        run: |
          echo "Running application structure tests..."
          PYTHONPATH=./src python -m tests.test_app -v
      - name: Run functionality tests  
        run: |
          echo "Running functionality tests..."
          PYTHONPATH=./src python -m tests.test_functionality -v
      - name: Run configuration tests
        run: |
          echo "Running configuration tests..."
          PYTHONPATH=./src python -m tests.test_config -v
      - name: Run complete test suite
        run: |
          echo "Running complete test suite..."
          PYTHONPATH=./src python -m tests.run_tests

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: tests
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set image tag
        id: vars
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
      
      # Build et push de l'image de l'application client
      - name: Build & push client image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.APP_NAME }}-client:${{ steps.vars.outputs.TAG }}
            ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.APP_NAME }}-client:latest
      
